Index: b/feeds/packages/net/git/Makefile
===================================================================
--- a/feeds/packages/net/git/Makefile
+++ b/feeds/packages/net/git/Makefile
@@ -17,6 +17,7 @@
 
 PKG_INSTALL:=1
 PKG_BUILD_PARALLEL:=1
+PKG_FIXUP:=autoreconf
 
 include $(INCLUDE_DIR)/package.mk
 
@@ -24,7 +25,7 @@
   SECTION:=net
   CATEGORY:=Network
   SUBMENU:=Version Control Systems
-  DEPENDS:=+libopenssl +libpthread
+  DEPENDS:=+libopenssl +libpthread +libcurl +libexpat
   TITLE:=The fast version control system
   URL:=http://git-scm.com
 endef
@@ -36,12 +37,6 @@
 endef
 
 MAKE_FLAGS := \
-	CC="$(TARGET_CC)" \
-	CFLAGS="$(TARGET_CFLAGS)" \
-	CPPFLAGS="$(TARGET_CPPFLAGS)" \
-	LDFLAGS="$(TARGET_LDFLAGS)" \
-	NO_CURL="YesPlease" \
-	NO_EXPAT="YesPlease" \
 	NO_MKSTEMPS="YesPlease" \
 	NO_GETTEXT="YesPlease" \
 	NO_UNIX_SOCKETS="YesPlease" \
@@ -50,16 +45,10 @@
 	NO_NSEC="YesPlease" \
 	NO_PERL="YesPlease" \
 	NO_PYTHON="YesPlease" \
-	NO_TCLTK="YesPlease"
+	NO_TCLTK="YesPlease" \
+	NO_INSTALL_HARDLINKS="YesPlease"
 
-define Build/Configure
-	$(MAKE) -C $(PKG_BUILD_DIR) \
-		configure
-
-	( cd $(PKG_BUILD_DIR); \
-		./configure --prefix=/usr \
-	);
-endef
+CONFIGURE_ARGS += --prefix=/usr --with-curl --with-expat
 
 define Package/git/install
 	$(INSTALL_DIR) $(1)
Index: b/feeds/packages/net/git/patches/010-make-git-an-so
===================================================================
--- /dev/null
+++ b/feeds/packages/net/git/patches/010-make-git-an-so
@@ -0,0 +1,73 @@
+Index: b/Makefile
+===================================================================
+--- a/Makefile
++++ b/Makefile
+@@ -904,7 +904,7 @@
+ BUILTIN_OBJS += builtin/verify-tag.o
+ BUILTIN_OBJS += builtin/write-tree.o
+ 
+-GITLIBS = $(LIB_FILE) $(XDIFF_LIB)
++GITLIBS = libgit.so.$(GIT_VERSION)
+ EXTLIBS =
+ 
+ #
+@@ -1975,9 +1975,8 @@
+ 	'-DGIT_MAN_PATH="$(mandir_SQ)"' \
+ 	'-DGIT_INFO_PATH="$(infodir_SQ)"'
+ 
+-git$X: git.o GIT-LDFLAGS $(BUILTIN_OBJS) $(GITLIBS)
+-	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ git.o \
+-		$(BUILTIN_OBJS) $(ALL_LDFLAGS) $(LIBS)
++git$X: git-cli.o GIT-LDFLAGS $(GITLIBS)
++	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ git-cli.o $(ALL_LDFLAGS) $(LIBS)
+ 
+ help.sp help.o: common-cmds.h
+ 
+@@ -2104,7 +2103,7 @@
+ 
+ TEST_OBJS := $(patsubst test-%$X,test-%.o,$(TEST_PROGRAMS))
+ GIT_OBJS := $(LIB_OBJS) $(BUILTIN_OBJS) $(PROGRAM_OBJS) $(TEST_OBJS) \
+-	git.o
++	git.o git-cli.o
+ ifndef NO_CURL
+ 	GIT_OBJS += http.o http-walker.o remote-curl.o
+ endif
+@@ -2308,11 +2307,10 @@
+ 	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) \
+ 		$(LIBS) $(CURL_LIBCURL) $(EXPAT_LIBEXPAT)
+ 
+-$(LIB_FILE): $(LIB_OBJS)
+-	$(QUIET_AR)$(RM) $@ && $(AR) rcs $@ $(LIB_OBJS)
+-
+-$(XDIFF_LIB): $(XDIFF_OBJS)
+-	$(QUIET_AR)$(RM) $@ && $(AR) rcs $@ $(XDIFF_OBJS)
++SO_OBJS = $(LIB_OBJS) $(XDIFF_OBJS) $(BUILTIN_OBJS) git.o
++$(SO_OBJS) : CFLAGS += -fPIC
++$(GITLIBS): $(SO_OBJS)
++	$(CC) -o $(GITLIBS) -shared $(SO_OBJS)
+ 
+ $(VCSSVN_LIB): $(VCSSVN_OBJS)
+ 	$(QUIET_AR)$(RM) $@ && $(AR) rcs $@ $(VCSSVN_OBJS)
+Index: b/git-cli.c
+===================================================================
+--- /dev/null
++++ b/git-cli.c
+@@ -0,0 +1,5 @@
++int git_main(int argc, const char **argv);
++
++int main(int argc, const char **argv) {
++    return git_main(argc, argv);
++}
+Index: b/git.c
+===================================================================
+--- a/git.c
++++ b/git.c
+@@ -529,7 +529,7 @@
+ }
+ 
+ 
+-int main(int argc, const char **argv)
++int git_main(int argc, const char **argv)
+ {
+ 	const char *cmd;
+ 
Index: b/feeds/packages/net/git/patches/020-fix-cross-compile-configure-error
===================================================================
--- /dev/null
+++ b/feeds/packages/net/git/patches/020-fix-cross-compile-configure-error
@@ -0,0 +1,65 @@
+Index: b/configure.ac
+===================================================================
+--- a/configure.ac
++++ b/configure.ac
+@@ -784,56 +784,15 @@
+ #
+ # Define FREAD_READS_DIRECTORIES if your are on a system which succeeds
+ # when attempting to read from an fopen'ed directory.
+-AC_CACHE_CHECK([whether system succeeds to read fopen'ed directory],
+- [ac_cv_fread_reads_directories],
+-[
+-AC_RUN_IFELSE(
+-	[AC_LANG_PROGRAM([AC_INCLUDES_DEFAULT],
+-		[[char c;
+-		FILE *f = fopen(".", "r");
+-		return f && fread(&c, 1, 1, f)]])],
+-	[ac_cv_fread_reads_directories=no],
+-	[ac_cv_fread_reads_directories=yes])
+-])
+-if test $ac_cv_fread_reads_directories = yes; then
+-	FREAD_READS_DIRECTORIES=UnfortunatelyYes
+-else
+-	FREAD_READS_DIRECTORIES=
+-fi
++#FREAD_READS_DIRECTORIES=UnfortunatelyYes
++FREAD_READS_DIRECTORIES=
+ AC_SUBST(FREAD_READS_DIRECTORIES)
+ #
+ # Define SNPRINTF_RETURNS_BOGUS if your are on a system which snprintf()
+ # or vsnprintf() return -1 instead of number of characters which would
+ # have been written to the final string if enough space had been available.
+-AC_CACHE_CHECK([whether snprintf() and/or vsnprintf() return bogus value],
+- [ac_cv_snprintf_returns_bogus],
+-[
+-AC_RUN_IFELSE(
+-	[AC_LANG_PROGRAM([AC_INCLUDES_DEFAULT
+-		#include "stdarg.h"
+-
+-		int test_vsnprintf(char *str, size_t maxsize, const char *format, ...)
+-		{
+-		  int ret;
+-		  va_list ap;
+-		  va_start(ap, format);
+-		  ret = vsnprintf(str, maxsize, format, ap);
+-		  va_end(ap);
+-		  return ret;
+-		}],
+-		[[char buf[6];
+-		  if (test_vsnprintf(buf, 3, "%s", "12345") != 5
+-		      || strcmp(buf, "12")) return 1;
+-		  if (snprintf(buf, 3, "%s", "12345") != 5
+-		      || strcmp(buf, "12")) return 1]])],
+-	[ac_cv_snprintf_returns_bogus=no],
+-	[ac_cv_snprintf_returns_bogus=yes])
+-])
+-if test $ac_cv_snprintf_returns_bogus = yes; then
+-	SNPRINTF_RETURNS_BOGUS=UnfortunatelyYes
+-else
+-	SNPRINTF_RETURNS_BOGUS=
+-fi
++#SNPRINTF_RETURNS_BOGUS=UnfortunatelyYes
++SNPRINTF_RETURNS_BOGUS=
+ AC_SUBST(SNPRINTF_RETURNS_BOGUS)
+ 
+ 
Index: b/feeds/packages/net/git/patches/100-convert_builtin.patch
===================================================================
--- a/feeds/packages/net/git/patches/100-convert_builtin.patch
+++ /dev/null
@@ -1,248 +0,0 @@
---- /dev/null
-+++ b/builtin/daemon.c
-@@ -0,0 +1 @@
-+#include "../daemon.c"
---- /dev/null
-+++ b/builtin/fast-import.c
-@@ -0,0 +1 @@
-+#include "../fast-import.c"
---- /dev/null
-+++ b/builtin/http-backend.c
-@@ -0,0 +1 @@
-+#include "../http-backend.c"
---- /dev/null
-+++ b/builtin/imap-send.c
-@@ -0,0 +1 @@
-+#include "../imap-send.c"
---- /dev/null
-+++ b/builtin/shell.c
-@@ -0,0 +1 @@
-+#include "../shell.c"
---- /dev/null
-+++ b/builtin/upload-pack.c
-@@ -0,0 +1 @@
-+#include "../upload-pack.c"
---- a/builtin.h
-+++ b/builtin.h
-@@ -153,5 +153,11 @@ extern int cmd_verify_pack(int argc, con
- extern int cmd_show_ref(int argc, const char **argv, const char *prefix);
- extern int cmd_pack_refs(int argc, const char **argv, const char *prefix);
- extern int cmd_replace(int argc, const char **argv, const char *prefix);
-+extern int cmd_daemon(int argc, char **argv, const char *prefix);
-+extern int cmd_fast_import(int argc, const char **argv, const char *prefix);
-+extern int cmd_http_backend(int argc, char **argv, const char *prefix);
-+extern int cmd_imap_send(int argc, char **argv, const char *prefix);
-+extern int cmd_shell(int argc, char **argv, const char *prefix);
-+extern int cmd_upload_pack(int argc, char **argv, const char *prefix);
- 
- #endif
---- a/daemon.c
-+++ b/daemon.c
-@@ -1091,7 +1091,7 @@ static int serve(struct string_list *lis
- 	return service_loop(&socklist);
- }
- 
--int main(int argc, char **argv)
-+int cmd_daemon(int argc, char **argv, const char *prefix)
- {
- 	int listen_port = 0;
- 	struct string_list listen_addr = STRING_LIST_INIT_NODUP;
---- a/fast-import.c
-+++ b/fast-import.c
-@@ -3347,7 +3347,7 @@ static void parse_argv(void)
- 		read_marks();
- }
- 
--int main(int argc, const char **argv)
-+int cmd_fast_import(int argc, const char **argv, const char *prefix)
- {
- 	unsigned int i;
- 
---- a/http-backend.c
-+++ b/http-backend.c
-@@ -533,7 +533,7 @@ static struct service_cmd {
- 	{"POST", "/git-receive-pack$", service_rpc}
- };
- 
--int main(int argc, char **argv)
-+int cmd_http_backend(int argc, char **argv, const char *prefix)
- {
- 	char *method = getenv("REQUEST_METHOD");
- 	char *dir;
---- a/imap-send.c
-+++ b/imap-send.c
-@@ -1502,7 +1502,7 @@ static int git_imap_config(const char *k
- 	return 0;
- }
- 
--int main(int argc, char **argv)
-+int cmd_imap_send(int argc, char **argv, const char *prefix)
- {
- 	struct msg_data all_msgs, msg;
- 	struct store *ctx = NULL;
---- a/shell.c
-+++ b/shell.c
-@@ -129,7 +129,7 @@ static struct commands {
- 	{ NULL },
- };
- 
--int main(int argc, char **argv)
-+int cmd_shell(int argc, char **argv, const char *prefix)
- {
- 	char *prog;
- 	const char **user_argv;
---- a/upload-pack.c
-+++ b/upload-pack.c
-@@ -785,7 +785,7 @@ static void upload_pack(void)
- 	}
- }
- 
--int main(int argc, char **argv)
-+int cmd_upload_pack(int argc, char **argv, const char *prefix)
- {
- 	char *dir;
- 	int i;
---- a/git.c
-+++ b/git.c
-@@ -269,11 +269,11 @@ const char git_version_string[] = GIT_VE
- 
- struct cmd_struct {
- 	const char *cmd;
--	int (*fn)(int, const char **, const char *);
-+	int (*fn)(int, char **, const char *);
- 	int option;
- };
- 
--static int run_builtin(struct cmd_struct *p, int argc, const char **argv)
-+static int run_builtin(struct cmd_struct *p, int argc, char **argv)
- {
- 	int status, help;
- 	struct stat st;
-@@ -326,7 +326,7 @@ static int run_builtin(struct cmd_struct
- 	return 0;
- }
- 
--static void handle_internal_command(int argc, const char **argv)
-+static void handle_internal_command(int argc, char **argv)
- {
- 	const char *cmd = argv[0];
- 	static struct cmd_struct commands[] = {
-@@ -353,12 +353,14 @@ static void handle_internal_command(int
- 		{ "commit-tree", cmd_commit_tree, RUN_SETUP },
- 		{ "config", cmd_config, RUN_SETUP_GENTLY },
- 		{ "count-objects", cmd_count_objects, RUN_SETUP },
-+		{ "daemon", cmd_daemon },
- 		{ "describe", cmd_describe, RUN_SETUP },
- 		{ "diff", cmd_diff },
- 		{ "diff-files", cmd_diff_files, RUN_SETUP | NEED_WORK_TREE },
- 		{ "diff-index", cmd_diff_index, RUN_SETUP },
- 		{ "diff-tree", cmd_diff_tree, RUN_SETUP },
- 		{ "fast-export", cmd_fast_export, RUN_SETUP },
-+		{ "fast-import", cmd_fast_import },
- 		{ "fetch", cmd_fetch, RUN_SETUP },
- 		{ "fetch-pack", cmd_fetch_pack, RUN_SETUP },
- 		{ "fmt-merge-msg", cmd_fmt_merge_msg, RUN_SETUP },
-@@ -371,6 +373,8 @@ static void handle_internal_command(int
- 		{ "grep", cmd_grep, RUN_SETUP_GENTLY },
- 		{ "hash-object", cmd_hash_object },
- 		{ "help", cmd_help },
-+		{ "http-backend", cmd_http_backend },
-+		{ "imap-send", cmd_imap_send },
- 		{ "index-pack", cmd_index_pack, RUN_SETUP_GENTLY },
- 		{ "init", cmd_init_db },
- 		{ "init-db", cmd_init_db },
-@@ -419,6 +423,7 @@ static void handle_internal_command(int
- 		{ "revert", cmd_revert, RUN_SETUP | NEED_WORK_TREE },
- 		{ "rm", cmd_rm, RUN_SETUP },
- 		{ "send-pack", cmd_send_pack, RUN_SETUP },
-+		{ "shell", cmd_shell },
- 		{ "shortlog", cmd_shortlog, RUN_SETUP_GENTLY | USE_PAGER },
- 		{ "show", cmd_show, RUN_SETUP },
- 		{ "show-branch", cmd_show_branch, RUN_SETUP },
-@@ -436,6 +441,7 @@ static void handle_internal_command(int
- 		{ "update-server-info", cmd_update_server_info, RUN_SETUP },
- 		{ "upload-archive", cmd_upload_archive },
- 		{ "upload-archive--writer", cmd_upload_archive_writer },
-+		{ "upload-pack", cmd_upload_pack },
- 		{ "var", cmd_var, RUN_SETUP_GENTLY },
- 		{ "verify-pack", cmd_verify_pack },
- 		{ "verify-tag", cmd_verify_tag, RUN_SETUP },
---- a/Makefile
-+++ b/Makefile
-@@ -467,15 +467,7 @@ EXTRA_PROGRAMS =
- # ... and all the rest that could be moved out of bindir to gitexecdir
- PROGRAMS += $(EXTRA_PROGRAMS)
- 
--PROGRAM_OBJS += credential-store.o
--PROGRAM_OBJS += daemon.o
--PROGRAM_OBJS += fast-import.o
--PROGRAM_OBJS += http-backend.o
--PROGRAM_OBJS += imap-send.o
--PROGRAM_OBJS += sh-i18n--envsubst.o
--PROGRAM_OBJS += shell.o
--PROGRAM_OBJS += show-index.o
--PROGRAM_OBJS += upload-pack.o
-+PROGRAM_OBJS =
- 
- # Binary suffix, set to .exe for Windows builds
- X =
-@@ -903,6 +895,12 @@ BUILTIN_OBJS += builtin/var.o
- BUILTIN_OBJS += builtin/verify-pack.o
- BUILTIN_OBJS += builtin/verify-tag.o
- BUILTIN_OBJS += builtin/write-tree.o
-+BUILTIN_OBJS += builtin/daemon.o
-+BUILTIN_OBJS += builtin/fast-import.o
-+BUILTIN_OBJS += builtin/http-backend.o
-+BUILTIN_OBJS += builtin/imap-send.o
-+BUILTIN_OBJS += builtin/shell.o
-+BUILTIN_OBJS += builtin/upload-pack.o
- 
- GITLIBS = $(LIB_FILE) $(XDIFF_LIB)
- EXTLIBS =
-@@ -1502,7 +1500,7 @@ endif
- EXTLIBS += -lz
- 
- ifndef NO_OPENSSL
--	OPENSSL_LIBSSL = -lssl
-+	EXTLIBS += -lssl
- 	ifdef OPENSSLDIR
- 		BASIC_CFLAGS += -I$(OPENSSLDIR)/include
- 		OPENSSL_LINK = -L$(OPENSSLDIR)/$(lib) $(CC_LD_DYNPATH)$(OPENSSLDIR)/$(lib)
-@@ -2287,10 +2285,6 @@ endif
- git-%$X: %.o GIT-LDFLAGS $(GITLIBS)
- 	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) $(LIBS)
- 
--git-imap-send$X: imap-send.o GIT-LDFLAGS $(GITLIBS)
--	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) \
--		$(LIBS) $(OPENSSL_LINK) $(OPENSSL_LIBSSL) $(LIB_4_CRYPTO)
--
- git-http-fetch$X: revision.o http.o http-walker.o http-fetch.o GIT-LDFLAGS $(GITLIBS)
- 	$(QUIET_LINK)$(CC) $(ALL_CFLAGS) -o $@ $(ALL_LDFLAGS) $(filter %.o,$^) \
- 		$(LIBS) $(CURL_LIBCURL)
-@@ -2587,24 +2581,22 @@ endif
- 	bindir=$$(cd '$(DESTDIR_SQ)$(bindir_SQ)' && pwd) && \
- 	execdir=$$(cd '$(DESTDIR_SQ)$(gitexec_instdir_SQ)' && pwd) && \
- 	{ test "$$bindir/" = "$$execdir/" || \
--	  for p in git$X $(filter $(install_bindir_programs),$(ALL_PROGRAMS)); do \
-+	  for p in $(filter $(install_bindir_programs),$(ALL_PROGRAMS)); do \
- 		$(RM) "$$execdir/$$p" && \
- 		test -z "$(NO_INSTALL_HARDLINKS)$(NO_CROSS_DIRECTORY_HARDLINKS)" && \
--		ln "$$bindir/$$p" "$$execdir/$$p" 2>/dev/null || \
-+		ln -s git "$$execdir/$$p" 2>/dev/null || \
- 		cp "$$bindir/$$p" "$$execdir/$$p" || exit; \
- 	  done; \
- 	} && \
- 	for p in $(filter $(install_bindir_programs),$(BUILT_INS)); do \
- 		$(RM) "$$bindir/$$p" && \
- 		test -z "$(NO_INSTALL_HARDLINKS)" && \
--		ln "$$bindir/git$X" "$$bindir/$$p" 2>/dev/null || \
- 		ln -s "git$X" "$$bindir/$$p" 2>/dev/null || \
- 		cp "$$bindir/git$X" "$$bindir/$$p" || exit; \
- 	done && \
- 	for p in $(BUILT_INS); do \
- 		$(RM) "$$execdir/$$p" && \
- 		test -z "$(NO_INSTALL_HARDLINKS)" && \
--		ln "$$execdir/git$X" "$$execdir/$$p" 2>/dev/null || \
- 		ln -s "git$X" "$$execdir/$$p" 2>/dev/null || \
- 		cp "$$execdir/git$X" "$$execdir/$$p" || exit; \
- 	done && \
